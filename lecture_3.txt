date '+DATE:%m-%y%nTIME:%H:%M:%S'

Rename file:
mv Old_filename new_filename

#Remove a file:
rm file_name

Remove Dir:
rm -r directory_name
rmdir directory_name

Copy a file to another directory:
cp file_to_be_copy directory/new_copied_file_name

Hard Link:
ln file_name link_name

Soft Link:
ln -s file_name soft_link_name

What kind of file we have:
file *

Word Count:
wc sample
Output: No-of-lines No-of-words No-of-alphabets name_of_file
wc -l sample #Just print the lines
wc -w sample #No of words
wc -c sample #No of characters

#Filter the content, -d is delimiter, -f is field which we want to display/filter
cut -d"-" -f 1,2 sports #default delimter is tab

dd if=test of=out conv=ucase #Inputfile=if, outputfile=of conv=convert
dd if=test of=urope conv=ebcdic

Fancy output of text provided:
banner I am Prabhat

Use "" if want to print on a single line.
banner "bye bye" #10 char on a single line.

ls -ltr

compress -v unix #-v, shell will display the message about the % of compression it achived.
zcat unix.Z #To view the compressed file.
uncompress unix.Z

Execute shell script:
sh ss1.sh

vi ss4.sh
#This file takes a file name as an agument and renames it.
mv $1 $2
cat $2
sh ss4.sh

#In the below script, we are providing ss1.sh as an argument in $1.
chmod 744 $1
ls -ltr $1
sh ss5.sh ss1.sh

#We can use set directly to set the potional parameters.
set scripting is cool!
echo $* #echo all the potional parameters. It will print the value.
echo $# , will print the total no of set pogitional paraments.

#It will rename a file to file.name
#where name is the login name of the user executing the script
name=$1
set `who am i`  #Reverse Quotes or Accent Graves.
mv $name $name.$1

#No of files or dir in my present direcotry, $# tells the total no of potinal parameters set by set commsnd.
echo The total no of item on my desktop is=$#

#airthmatic operations
a=30 b=40
echo `expr $a + $b`
echo `expr $b - $b`
echo `expr $a \* $b`
echo `expr $a / $b`
echo `expr $a % $b`

##Operator Precedence
a=30 b=15 c=4 d=45
echo `expr $a \* \( $b  + $c \) / $d`

##Math on Real Numbers, Floats
#Floating Point Arithmatic
a=10.5
b=3.5
c=`echo $a + $b | bc`  #Their should be no space between "c=`echo".
d=`echo   $a - $b | bc`
e=`echo $a \* $b | bc`
f=`echo $a / $b | bc`
echo $c $d $e $f

sudo apt install bc

##Escape Sequence
#Excape Sequence
echo "Thi si first line. \nthis is second"
echo "This is carrier return. \rThis is the second part only." #'\r' is carriage return
echo "This is carrier return. \tThis is the second part only." #'\t' is horizontal tab. 5 space.
echo "This is carrier return. \b\b\b\b\b\bThis is the second part only."
echo "\033[1mThis is carrier return. This is the second part only.\033[0m"
echo "\033[7mThis is carrier return. This is the second part only.\033[0m"

#define RESET   "\033[0m"
#define BLACK   "\033[30m"      /* Black */
#define RED     "\033[31m"      /* Red */
#define GREEN   "\033[32m"      /* Green */
#define YELLOW  "\033[33m"      /* Yellow */
#define BLUE    "\033[34m"      /* Blue */
#define MAGENTA "\033[35m"      /* Magenta */
#define CYAN    "\033[36m"      /* Cyan */
#define WHITE   "\033[37m"      /* White */
#define BOLDBLACK   "\033[1m\033[30m"      /* Bold Black */
#define BOLDRED     "\033[1m\033[31m"      /* Bold Red */
#define BOLDGREEN   "\033[1m\033[32m"      /* Bold Green */
#define BOLDYELLOW  "\033[1m\033[33m"      /* Bold Yellow */
#define BOLDBLUE    "\033[1m\033[34m"      /* Bold Blue */
#define BOLDMAGENTA "\033[1m\033[35m"      /* Bold Magenta */
#define BOLDCYAN    "\033[1m\033[36m"      /* Bold Cyan */

##Tput Command
#tput in action
tput clear
echo "Total numbr of rows on screen=\c"
tput lines
echo "Total number fo columns on the screen=\c"
tput cols
tput cup 15 20  #Go to 15 rows and 20th column
tput bold
echo "This is to test the bold"
echo "\033[0mBye Bye"



